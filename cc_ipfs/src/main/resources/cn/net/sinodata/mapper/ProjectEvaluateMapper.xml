<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.net.sinodata.mapper.ProjectEvaluateMapper" >
  <resultMap id="BaseResultMap" type="cn.net.sinodata.model.ProjectEvaluate" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="PROJECTID" property="projectid" jdbcType="VARCHAR" />
    <result column="INDUSTRYFUTUREVAL" property="industryfutureval" jdbcType="VARCHAR" />
    <result column="MANAGEMENTTEAMSVAL" property="managementteamsval" jdbcType="VARCHAR" />
    <result column="TECHNOLOGICALLEVELVAL" property="technologicallevelval" jdbcType="VARCHAR" />
    <result column="OPERATIONPATTERNVAL" property="operationpatternval" jdbcType="VARCHAR" />
    <result column="FINANCIALPOSITIONVAL" property="financialpositionval" jdbcType="VARCHAR" />
    <result column="APPRAISEMENTVAL" property="appraisementval" jdbcType="VARCHAR" />
    <result column="APPRAISERID" property="appraiserid" jdbcType="VARCHAR" />
    <result column="AVERAGEVAL" property="averageval" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, PROJECTID, INDUSTRYFUTUREVAL, MANAGEMENTTEAMSVAL, TECHNOLOGICALLEVELVAL, OPERATIONPATTERNVAL, 
    FINANCIALPOSITIONVAL, APPRAISEMENTVAL, APPRAISERID, AVERAGEVAL
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.net.sinodata.model.ProjectEvaluateExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PROJECT_EVALUATE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from PROJECT_EVALUATE
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from PROJECT_EVALUATE
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.net.sinodata.model.ProjectEvaluateExample" >
    delete from PROJECT_EVALUATE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.net.sinodata.model.ProjectEvaluate" >
    insert into PROJECT_EVALUATE (ID, PROJECTID, INDUSTRYFUTUREVAL, 
      MANAGEMENTTEAMSVAL, TECHNOLOGICALLEVELVAL, 
      OPERATIONPATTERNVAL, FINANCIALPOSITIONVAL, 
      APPRAISEMENTVAL, APPRAISERID, AVERAGEVAL
      )
    values (#{id,jdbcType=VARCHAR}, #{projectid,jdbcType=VARCHAR}, #{industryfutureval,jdbcType=VARCHAR}, 
      #{managementteamsval,jdbcType=VARCHAR}, #{technologicallevelval,jdbcType=VARCHAR}, 
      #{operationpatternval,jdbcType=VARCHAR}, #{financialpositionval,jdbcType=VARCHAR}, 
      #{appraisementval,jdbcType=VARCHAR}, #{appraiserid,jdbcType=VARCHAR}, #{averageval,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.net.sinodata.model.ProjectEvaluate" >
    insert into PROJECT_EVALUATE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="projectid != null" >
        PROJECTID,
      </if>
      <if test="industryfutureval != null" >
        INDUSTRYFUTUREVAL,
      </if>
      <if test="managementteamsval != null" >
        MANAGEMENTTEAMSVAL,
      </if>
      <if test="technologicallevelval != null" >
        TECHNOLOGICALLEVELVAL,
      </if>
      <if test="operationpatternval != null" >
        OPERATIONPATTERNVAL,
      </if>
      <if test="financialpositionval != null" >
        FINANCIALPOSITIONVAL,
      </if>
      <if test="appraisementval != null" >
        APPRAISEMENTVAL,
      </if>
      <if test="appraiserid != null" >
        APPRAISERID,
      </if>
      <if test="averageval != null" >
        AVERAGEVAL,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="projectid != null" >
        #{projectid,jdbcType=VARCHAR},
      </if>
      <if test="industryfutureval != null" >
        #{industryfutureval,jdbcType=VARCHAR},
      </if>
      <if test="managementteamsval != null" >
        #{managementteamsval,jdbcType=VARCHAR},
      </if>
      <if test="technologicallevelval != null" >
        #{technologicallevelval,jdbcType=VARCHAR},
      </if>
      <if test="operationpatternval != null" >
        #{operationpatternval,jdbcType=VARCHAR},
      </if>
      <if test="financialpositionval != null" >
        #{financialpositionval,jdbcType=VARCHAR},
      </if>
      <if test="appraisementval != null" >
        #{appraisementval,jdbcType=VARCHAR},
      </if>
      <if test="appraiserid != null" >
        #{appraiserid,jdbcType=VARCHAR},
      </if>
      <if test="averageval != null" >
        #{averageval,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.net.sinodata.model.ProjectEvaluateExample" resultType="java.lang.Integer" >
    select count(*) from PROJECT_EVALUATE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update PROJECT_EVALUATE
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.projectid != null" >
        PROJECTID = #{record.projectid,jdbcType=VARCHAR},
      </if>
      <if test="record.industryfutureval != null" >
        INDUSTRYFUTUREVAL = #{record.industryfutureval,jdbcType=VARCHAR},
      </if>
      <if test="record.managementteamsval != null" >
        MANAGEMENTTEAMSVAL = #{record.managementteamsval,jdbcType=VARCHAR},
      </if>
      <if test="record.technologicallevelval != null" >
        TECHNOLOGICALLEVELVAL = #{record.technologicallevelval,jdbcType=VARCHAR},
      </if>
      <if test="record.operationpatternval != null" >
        OPERATIONPATTERNVAL = #{record.operationpatternval,jdbcType=VARCHAR},
      </if>
      <if test="record.financialpositionval != null" >
        FINANCIALPOSITIONVAL = #{record.financialpositionval,jdbcType=VARCHAR},
      </if>
      <if test="record.appraisementval != null" >
        APPRAISEMENTVAL = #{record.appraisementval,jdbcType=VARCHAR},
      </if>
      <if test="record.appraiserid != null" >
        APPRAISERID = #{record.appraiserid,jdbcType=VARCHAR},
      </if>
      <if test="record.averageval != null" >
        AVERAGEVAL = #{record.averageval,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update PROJECT_EVALUATE
    set ID = #{record.id,jdbcType=VARCHAR},
      PROJECTID = #{record.projectid,jdbcType=VARCHAR},
      INDUSTRYFUTUREVAL = #{record.industryfutureval,jdbcType=VARCHAR},
      MANAGEMENTTEAMSVAL = #{record.managementteamsval,jdbcType=VARCHAR},
      TECHNOLOGICALLEVELVAL = #{record.technologicallevelval,jdbcType=VARCHAR},
      OPERATIONPATTERNVAL = #{record.operationpatternval,jdbcType=VARCHAR},
      FINANCIALPOSITIONVAL = #{record.financialpositionval,jdbcType=VARCHAR},
      APPRAISEMENTVAL = #{record.appraisementval,jdbcType=VARCHAR},
      APPRAISERID = #{record.appraiserid,jdbcType=VARCHAR},
      AVERAGEVAL = #{record.averageval,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.net.sinodata.model.ProjectEvaluate" >
    update PROJECT_EVALUATE
    <set >
      <if test="projectid != null" >
        PROJECTID = #{projectid,jdbcType=VARCHAR},
      </if>
      <if test="industryfutureval != null" >
        INDUSTRYFUTUREVAL = #{industryfutureval,jdbcType=VARCHAR},
      </if>
      <if test="managementteamsval != null" >
        MANAGEMENTTEAMSVAL = #{managementteamsval,jdbcType=VARCHAR},
      </if>
      <if test="technologicallevelval != null" >
        TECHNOLOGICALLEVELVAL = #{technologicallevelval,jdbcType=VARCHAR},
      </if>
      <if test="operationpatternval != null" >
        OPERATIONPATTERNVAL = #{operationpatternval,jdbcType=VARCHAR},
      </if>
      <if test="financialpositionval != null" >
        FINANCIALPOSITIONVAL = #{financialpositionval,jdbcType=VARCHAR},
      </if>
      <if test="appraisementval != null" >
        APPRAISEMENTVAL = #{appraisementval,jdbcType=VARCHAR},
      </if>
      <if test="appraiserid != null" >
        APPRAISERID = #{appraiserid,jdbcType=VARCHAR},
      </if>
      <if test="averageval != null" >
        AVERAGEVAL = #{averageval,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.net.sinodata.model.ProjectEvaluate" >
    update PROJECT_EVALUATE
    set PROJECTID = #{projectid,jdbcType=VARCHAR},
      INDUSTRYFUTUREVAL = #{industryfutureval,jdbcType=VARCHAR},
      MANAGEMENTTEAMSVAL = #{managementteamsval,jdbcType=VARCHAR},
      TECHNOLOGICALLEVELVAL = #{technologicallevelval,jdbcType=VARCHAR},
      OPERATIONPATTERNVAL = #{operationpatternval,jdbcType=VARCHAR},
      FINANCIALPOSITIONVAL = #{financialpositionval,jdbcType=VARCHAR},
      APPRAISEMENTVAL = #{appraisementval,jdbcType=VARCHAR},
      APPRAISERID = #{appraiserid,jdbcType=VARCHAR},
      AVERAGEVAL = #{averageval,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>