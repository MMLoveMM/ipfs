<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.net.sinodata.mapper.PerCustomerInfoMapper" >
  <resultMap id="BaseResultMap" type="cn.net.sinodata.model.PerCustomerInfo" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="USERNAME" property="username" jdbcType="VARCHAR" />
    <result column="SEX" property="sex" jdbcType="VARCHAR" />
    <result column="AGE" property="age" jdbcType="VARCHAR" />
    <result column="PEOPLE" property="people" jdbcType="VARCHAR" />
    <result column="PHONE" property="phone" jdbcType="VARCHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="ADDRESS" property="address" jdbcType="VARCHAR" />
    <result column="WORKUNIT" property="workunit" jdbcType="VARCHAR" />
    <result column="FAMILYBACKGROUND" property="familybackground" jdbcType="VARCHAR" />
    <result column="EDUCATION" property="education" jdbcType="VARCHAR" />
    <result column="WORK" property="work" jdbcType="VARCHAR" />
    <result column="SOCIALCONTEXT" property="socialcontext" jdbcType="VARCHAR" />
    <result column="CREDITSTANDING" property="creditstanding" jdbcType="VARCHAR" />
    <result column="OTHERINFOS" property="otherinfos" jdbcType="VARCHAR" />
    <result column="CREATETIME" property="createtime" jdbcType="TIMESTAMP" />
    <result column="UPDATETIME" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="COMPANYID" property="companyid" jdbcType="VARCHAR" />
    <result column="INPUTUSERID" property="inputuserid" jdbcType="VARCHAR" />
    <result column="PERNUM" property="pernum" jdbcType="VARCHAR" />
    <result column="CUSTYPE" property="custype" jdbcType="VARCHAR" />
    <result column="ISRELCUS" property="isrelcus" jdbcType="VARCHAR" />
    <result column="REFEREE" property="referee" jdbcType="VARCHAR" />
    <result column="REFEREENAME" property="refereename" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, USERNAME, SEX, AGE, PEOPLE, PHONE, EMAIL, ADDRESS, WORKUNIT, FAMILYBACKGROUND, 
    EDUCATION, WORK, SOCIALCONTEXT, CREDITSTANDING, OTHERINFOS, CREATETIME, UPDATETIME, 
    COMPANYID, INPUTUSERID, PERNUM, CUSTYPE, ISRELCUS, REFEREE, REFEREENAME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.net.sinodata.model.PerCustomerInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PER_CUSTOMER_INFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from PER_CUSTOMER_INFO
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  
  <!-- 查询某列perNum最大值  xj-->
   <select id="getMaxProjectNum"  resultType="String" parameterType="java.lang.String" >
    select max(PERNUM) from  PER_CUSTOMER_INFO
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from PER_CUSTOMER_INFO
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.net.sinodata.model.PerCustomerInfoExample" >
    delete from PER_CUSTOMER_INFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.net.sinodata.model.PerCustomerInfo" >
    insert into PER_CUSTOMER_INFO (ID, USERNAME, SEX, 
      AGE, PEOPLE, PHONE, 
      EMAIL, ADDRESS, WORKUNIT, 
      FAMILYBACKGROUND, EDUCATION, WORK, 
      SOCIALCONTEXT, CREDITSTANDING, OTHERINFOS, 
      CREATETIME, UPDATETIME, COMPANYID, 
      INPUTUSERID, PERNUM, CUSTYPE, 
      ISRELCUS, REFEREE, REFEREENAME
      )
    values (#{id,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{age,jdbcType=VARCHAR}, #{people,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{workunit,jdbcType=VARCHAR}, 
      #{familybackground,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, #{work,jdbcType=VARCHAR}, 
      #{socialcontext,jdbcType=VARCHAR}, #{creditstanding,jdbcType=VARCHAR}, #{otherinfos,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{companyid,jdbcType=VARCHAR}, 
      #{inputuserid,jdbcType=VARCHAR}, #{pernum,jdbcType=VARCHAR}, #{custype,jdbcType=VARCHAR}, 
      #{isrelcus,jdbcType=VARCHAR}, #{referee,jdbcType=VARCHAR}, #{refereename,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.net.sinodata.model.PerCustomerInfo" >
    insert into PER_CUSTOMER_INFO
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="username != null" >
        USERNAME,
      </if>
      <if test="sex != null" >
        SEX,
      </if>
      <if test="age != null" >
        AGE,
      </if>
      <if test="people != null" >
        PEOPLE,
      </if>
      <if test="phone != null" >
        PHONE,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="address != null" >
        ADDRESS,
      </if>
      <if test="workunit != null" >
        WORKUNIT,
      </if>
      <if test="familybackground != null" >
        FAMILYBACKGROUND,
      </if>
      <if test="education != null" >
        EDUCATION,
      </if>
      <if test="work != null" >
        WORK,
      </if>
      <if test="socialcontext != null" >
        SOCIALCONTEXT,
      </if>
      <if test="creditstanding != null" >
        CREDITSTANDING,
      </if>
      <if test="otherinfos != null" >
        OTHERINFOS,
      </if>
      <if test="createtime != null" >
        CREATETIME,
      </if>
      <if test="updatetime != null" >
        UPDATETIME,
      </if>
      <if test="companyid != null" >
        COMPANYID,
      </if>
      <if test="inputuserid != null" >
        INPUTUSERID,
      </if>
      <if test="pernum != null" >
        PERNUM,
      </if>
      <if test="custype != null" >
        CUSTYPE,
      </if>
      <if test="isrelcus != null" >
        ISRELCUS,
      </if>
      <if test="referee != null" >
        REFEREE,
      </if>
      <if test="refereename != null" >
        REFEREENAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=VARCHAR},
      </if>
      <if test="people != null" >
        #{people,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="workunit != null" >
        #{workunit,jdbcType=VARCHAR},
      </if>
      <if test="familybackground != null" >
        #{familybackground,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="work != null" >
        #{work,jdbcType=VARCHAR},
      </if>
      <if test="socialcontext != null" >
        #{socialcontext,jdbcType=VARCHAR},
      </if>
      <if test="creditstanding != null" >
        #{creditstanding,jdbcType=VARCHAR},
      </if>
      <if test="otherinfos != null" >
        #{otherinfos,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="companyid != null" >
        #{companyid,jdbcType=VARCHAR},
      </if>
      <if test="inputuserid != null" >
        #{inputuserid,jdbcType=VARCHAR},
      </if>
      <if test="pernum != null" >
        #{pernum,jdbcType=VARCHAR},
      </if>
      <if test="custype != null" >
        #{custype,jdbcType=VARCHAR},
      </if>
      <if test="isrelcus != null" >
        #{isrelcus,jdbcType=VARCHAR},
      </if>
      <if test="referee != null" >
        #{referee,jdbcType=VARCHAR},
      </if>
      <if test="refereename != null" >
        #{refereename,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.net.sinodata.model.PerCustomerInfoExample" resultType="java.lang.Integer" >
    select count(*) from PER_CUSTOMER_INFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update PER_CUSTOMER_INFO
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        SEX = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null" >
        AGE = #{record.age,jdbcType=VARCHAR},
      </if>
      <if test="record.people != null" >
        PEOPLE = #{record.people,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.workunit != null" >
        WORKUNIT = #{record.workunit,jdbcType=VARCHAR},
      </if>
      <if test="record.familybackground != null" >
        FAMILYBACKGROUND = #{record.familybackground,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null" >
        EDUCATION = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.work != null" >
        WORK = #{record.work,jdbcType=VARCHAR},
      </if>
      <if test="record.socialcontext != null" >
        SOCIALCONTEXT = #{record.socialcontext,jdbcType=VARCHAR},
      </if>
      <if test="record.creditstanding != null" >
        CREDITSTANDING = #{record.creditstanding,jdbcType=VARCHAR},
      </if>
      <if test="record.otherinfos != null" >
        OTHERINFOS = #{record.otherinfos,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        CREATETIME = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        UPDATETIME = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.companyid != null" >
        COMPANYID = #{record.companyid,jdbcType=VARCHAR},
      </if>
      <if test="record.inputuserid != null" >
        INPUTUSERID = #{record.inputuserid,jdbcType=VARCHAR},
      </if>
      <if test="record.pernum != null" >
        PERNUM = #{record.pernum,jdbcType=VARCHAR},
      </if>
      <if test="record.custype != null" >
        CUSTYPE = #{record.custype,jdbcType=VARCHAR},
      </if>
      <if test="record.isrelcus != null" >
        ISRELCUS = #{record.isrelcus,jdbcType=VARCHAR},
      </if>
      <if test="record.referee != null" >
        REFEREE = #{record.referee,jdbcType=VARCHAR},
      </if>
      <if test="record.refereename != null" >
        REFEREENAME = #{record.refereename,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update PER_CUSTOMER_INFO
    set ID = #{record.id,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      SEX = #{record.sex,jdbcType=VARCHAR},
      AGE = #{record.age,jdbcType=VARCHAR},
      PEOPLE = #{record.people,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      WORKUNIT = #{record.workunit,jdbcType=VARCHAR},
      FAMILYBACKGROUND = #{record.familybackground,jdbcType=VARCHAR},
      EDUCATION = #{record.education,jdbcType=VARCHAR},
      WORK = #{record.work,jdbcType=VARCHAR},
      SOCIALCONTEXT = #{record.socialcontext,jdbcType=VARCHAR},
      CREDITSTANDING = #{record.creditstanding,jdbcType=VARCHAR},
      OTHERINFOS = #{record.otherinfos,jdbcType=VARCHAR},
      CREATETIME = #{record.createtime,jdbcType=TIMESTAMP},
      UPDATETIME = #{record.updatetime,jdbcType=TIMESTAMP},
      COMPANYID = #{record.companyid,jdbcType=VARCHAR},
      INPUTUSERID = #{record.inputuserid,jdbcType=VARCHAR},
      PERNUM = #{record.pernum,jdbcType=VARCHAR},
      CUSTYPE = #{record.custype,jdbcType=VARCHAR},
      ISRELCUS = #{record.isrelcus,jdbcType=VARCHAR},
      REFEREE = #{record.referee,jdbcType=VARCHAR},
      REFEREENAME = #{record.refereename,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.net.sinodata.model.PerCustomerInfo" >
    update PER_CUSTOMER_INFO
    <set >
      <if test="username != null" >
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        SEX = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        AGE = #{age,jdbcType=VARCHAR},
      </if>
      <if test="people != null" >
        PEOPLE = #{people,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        ADDRESS = #{address,jdbcType=VARCHAR},
      </if>
      <if test="workunit != null" >
        WORKUNIT = #{workunit,jdbcType=VARCHAR},
      </if>
      <if test="familybackground != null" >
        FAMILYBACKGROUND = #{familybackground,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        EDUCATION = #{education,jdbcType=VARCHAR},
      </if>
      <if test="work != null" >
        WORK = #{work,jdbcType=VARCHAR},
      </if>
      <if test="socialcontext != null" >
        SOCIALCONTEXT = #{socialcontext,jdbcType=VARCHAR},
      </if>
      <if test="creditstanding != null" >
        CREDITSTANDING = #{creditstanding,jdbcType=VARCHAR},
      </if>
      <if test="otherinfos != null" >
        OTHERINFOS = #{otherinfos,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        CREATETIME = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        UPDATETIME = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="companyid != null" >
        COMPANYID = #{companyid,jdbcType=VARCHAR},
      </if>
      <if test="inputuserid != null" >
        INPUTUSERID = #{inputuserid,jdbcType=VARCHAR},
      </if>
      <if test="pernum != null" >
        PERNUM = #{pernum,jdbcType=VARCHAR},
      </if>
      <if test="custype != null" >
        CUSTYPE = #{custype,jdbcType=VARCHAR},
      </if>
      <if test="isrelcus != null" >
        ISRELCUS = #{isrelcus,jdbcType=VARCHAR},
      </if>
      <if test="referee != null" >
        REFEREE = #{referee,jdbcType=VARCHAR},
      </if>
      <if test="refereename != null" >
        REFEREENAME = #{refereename,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.net.sinodata.model.PerCustomerInfo" >
    update PER_CUSTOMER_INFO
    set USERNAME = #{username,jdbcType=VARCHAR},
      SEX = #{sex,jdbcType=VARCHAR},
      AGE = #{age,jdbcType=VARCHAR},
      PEOPLE = #{people,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      ADDRESS = #{address,jdbcType=VARCHAR},
      WORKUNIT = #{workunit,jdbcType=VARCHAR},
      FAMILYBACKGROUND = #{familybackground,jdbcType=VARCHAR},
      EDUCATION = #{education,jdbcType=VARCHAR},
      WORK = #{work,jdbcType=VARCHAR},
      SOCIALCONTEXT = #{socialcontext,jdbcType=VARCHAR},
      CREDITSTANDING = #{creditstanding,jdbcType=VARCHAR},
      OTHERINFOS = #{otherinfos,jdbcType=VARCHAR},
      CREATETIME = #{createtime,jdbcType=TIMESTAMP},
      UPDATETIME = #{updatetime,jdbcType=TIMESTAMP},
      COMPANYID = #{companyid,jdbcType=VARCHAR},
      INPUTUSERID = #{inputuserid,jdbcType=VARCHAR},
      PERNUM = #{pernum,jdbcType=VARCHAR},
      CUSTYPE = #{custype,jdbcType=VARCHAR},
      ISRELCUS = #{isrelcus,jdbcType=VARCHAR},
      REFEREE = #{referee,jdbcType=VARCHAR},
      REFEREENAME = #{refereename,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
  <resultMap extends="BaseResultMap" id="perCustomerInfoVoResultMap" type="cn.net.sinodata.vo.PerCustomerInfoVo">
		<result column="USERID" jdbcType="VARCHAR" property="uesrid" />
  </resultMap>
<!-- 按照example连表查询PER_CUSTOMER_INFO和T_USERS -->
	<select id="selectPerCustomerInfoVoByExample" parameterType="cn.net.sinodata.model.PerCustomerInfoExample" resultMap="perCustomerInfoVoResultMap">
		select
			P.ID id, P.USERNAME username, P.SEX sex, P.PHONE phone, P.ADDRESS address, P.WORKUNIT workunit, 
			P.CREATETIME createtime, P.PERNUM pernum, U.NAME name
			from (select * from PER_CUSTOMER_INFO
			<if test="_parameter != null">
				<include refid="Example_Where_Clause" />
			</if>
		) P LEFT OUTER JOIN T_USERS U ON P.INPUTUSERID = U.USERID
		
		
		ORDER BY P.CREATETIME DESC
		
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>	
	</select>
<!-- 按照example连表查询PER_CUSTOMER_INFO和asset_infos -->
	<select id="selectAssetMsgVoByExample" parameterType="cn.net.sinodata.model.PerCustomerInfoExample" resultMap="perCustomerInfoVoResultMap">
		select
			P.ID id, P.USERNAME username, P.CREATETIME createtime, A.HOUSINGTYPE housingtype, A.ADDORNUM addornum,
			A.AREAORNUM areaornum, A.BUYTIME buytime, A.PURCHASEVALUE purchasevalue, A.VALUATIONVALUE valuationvalue,
			A.WARRANTSNUM warrantsnum, A.OWNERANDUSAGE ownerandusage
			from (select * from PER_CUSTOMER_INFO
			<if test="_parameter != null">
				<include refid="Example_Where_Clause" />
			</if>
		) P LEFT OUTER JOIN ASSET_INFOS A ON P.ID = A.PERID
		
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>	
	</select>
<!-- 按照example连表查询PER_CUSTOMER_INFO和LiabilitiesInfos -->
	<select id="selectAssetReportVoByExample" parameterType="cn.net.sinodata.model.PerCustomerInfoExample" resultMap="perCustomerInfoVoResultMap">
		select
			P.ID id, P.USERNAME username, P.CREATETIME createtime, L.LIABTYPE liabtype,
			L.CREDIT credit, L.PAID paid, L.NOPAY nopay, L.AVERAGEPAY averagepay
			from (select * from PER_CUSTOMER_INFO
			<if test="_parameter != null">
				<include refid="Example_Where_Clause" />
			</if>
		) P LEFT OUTER JOIN LIABILITIES_INFOS L ON P.ID = L.PERID
		
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>	
	</select>
	
</mapper>