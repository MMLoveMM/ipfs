<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.net.sinodata.mapper.LoanRepaymentMapper" >
  <resultMap id="BaseResultMap" type="cn.net.sinodata.model.LoanRepayment" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="PROJECTID" property="projectid" jdbcType="VARCHAR" />
    <result column="COOPBANK" property="coopbank" jdbcType="VARCHAR" />
    <result column="LOANAMOUNT" property="loanamount" jdbcType="VARCHAR" />
    <result column="BANKACCOUNT" property="bankaccount" jdbcType="VARCHAR" />
    <result column="BANKNAME" property="bankname" jdbcType="VARCHAR" />
    <result column="LOANLIMIT" property="loanlimit" jdbcType="VARCHAR" />
    <result column="LOANDATE" property="loandate" jdbcType="VARCHAR" />
    <result column="LOANRATE" property="loanrate" jdbcType="VARCHAR" />
    <result column="LOANCONDITION" property="loancondition" jdbcType="VARCHAR" />
    <result column="REIMWAY" property="reimway" jdbcType="VARCHAR" />
    <result column="ALNID" property="alnid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, PROJECTID, COOPBANK, LOANAMOUNT, BANKACCOUNT, BANKNAME, LOANLIMIT, LOANDATE, 
    LOANRATE, LOANCONDITION, REIMWAY, ALNID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.net.sinodata.model.LoanRepaymentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from loan_repayment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from loan_repayment
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from loan_repayment
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.net.sinodata.model.LoanRepaymentExample" >
    delete from loan_repayment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.net.sinodata.model.LoanRepayment" >
    insert into loan_repayment (ID, PROJECTID, COOPBANK, 
      LOANAMOUNT, BANKACCOUNT, BANKNAME, 
      LOANLIMIT, LOANDATE, LOANRATE, 
      LOANCONDITION, REIMWAY, ALNID
      )
    values (#{id,jdbcType=VARCHAR}, #{projectid,jdbcType=VARCHAR}, #{coopbank,jdbcType=VARCHAR}, 
      #{loanamount,jdbcType=VARCHAR}, #{bankaccount,jdbcType=VARCHAR}, #{bankname,jdbcType=VARCHAR}, 
      #{loanlimit,jdbcType=VARCHAR}, #{loandate,jdbcType=VARCHAR}, #{loanrate,jdbcType=VARCHAR}, 
      #{loancondition,jdbcType=VARCHAR}, #{reimway,jdbcType=VARCHAR}, #{alnid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.net.sinodata.model.LoanRepayment" >
    insert into loan_repayment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="projectid != null" >
        PROJECTID,
      </if>
      <if test="coopbank != null" >
        COOPBANK,
      </if>
      <if test="loanamount != null" >
        LOANAMOUNT,
      </if>
      <if test="bankaccount != null" >
        BANKACCOUNT,
      </if>
      <if test="bankname != null" >
        BANKNAME,
      </if>
      <if test="loanlimit != null" >
        LOANLIMIT,
      </if>
      <if test="loandate != null" >
        LOANDATE,
      </if>
      <if test="loanrate != null" >
        LOANRATE,
      </if>
      <if test="loancondition != null" >
        LOANCONDITION,
      </if>
      <if test="reimway != null" >
        REIMWAY,
      </if>
      <if test="alnid != null" >
        ALNID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="projectid != null" >
        #{projectid,jdbcType=VARCHAR},
      </if>
      <if test="coopbank != null" >
        #{coopbank,jdbcType=VARCHAR},
      </if>
      <if test="loanamount != null" >
        #{loanamount,jdbcType=VARCHAR},
      </if>
      <if test="bankaccount != null" >
        #{bankaccount,jdbcType=VARCHAR},
      </if>
      <if test="bankname != null" >
        #{bankname,jdbcType=VARCHAR},
      </if>
      <if test="loanlimit != null" >
        #{loanlimit,jdbcType=VARCHAR},
      </if>
      <if test="loandate != null" >
        #{loandate,jdbcType=VARCHAR},
      </if>
      <if test="loanrate != null" >
        #{loanrate,jdbcType=VARCHAR},
      </if>
      <if test="loancondition != null" >
        #{loancondition,jdbcType=VARCHAR},
      </if>
      <if test="reimway != null" >
        #{reimway,jdbcType=VARCHAR},
      </if>
      <if test="alnid != null" >
        #{alnid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.net.sinodata.model.LoanRepaymentExample" resultType="java.lang.Integer" >
    select count(*) from loan_repayment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update loan_repayment
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.projectid != null" >
        PROJECTID = #{record.projectid,jdbcType=VARCHAR},
      </if>
      <if test="record.coopbank != null" >
        COOPBANK = #{record.coopbank,jdbcType=VARCHAR},
      </if>
      <if test="record.loanamount != null" >
        LOANAMOUNT = #{record.loanamount,jdbcType=VARCHAR},
      </if>
      <if test="record.bankaccount != null" >
        BANKACCOUNT = #{record.bankaccount,jdbcType=VARCHAR},
      </if>
      <if test="record.bankname != null" >
        BANKNAME = #{record.bankname,jdbcType=VARCHAR},
      </if>
      <if test="record.loanlimit != null" >
        LOANLIMIT = #{record.loanlimit,jdbcType=VARCHAR},
      </if>
      <if test="record.loandate != null" >
        LOANDATE = #{record.loandate,jdbcType=VARCHAR},
      </if>
      <if test="record.loanrate != null" >
        LOANRATE = #{record.loanrate,jdbcType=VARCHAR},
      </if>
      <if test="record.loancondition != null" >
        LOANCONDITION = #{record.loancondition,jdbcType=VARCHAR},
      </if>
      <if test="record.reimway != null" >
        REIMWAY = #{record.reimway,jdbcType=VARCHAR},
      </if>
      <if test="record.alnid != null" >
        ALNID = #{record.alnid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update loan_repayment
    set ID = #{record.id,jdbcType=VARCHAR},
      PROJECTID = #{record.projectid,jdbcType=VARCHAR},
      COOPBANK = #{record.coopbank,jdbcType=VARCHAR},
      LOANAMOUNT = #{record.loanamount,jdbcType=VARCHAR},
      BANKACCOUNT = #{record.bankaccount,jdbcType=VARCHAR},
      BANKNAME = #{record.bankname,jdbcType=VARCHAR},
      LOANLIMIT = #{record.loanlimit,jdbcType=VARCHAR},
      LOANDATE = #{record.loandate,jdbcType=VARCHAR},
      LOANRATE = #{record.loanrate,jdbcType=VARCHAR},
      LOANCONDITION = #{record.loancondition,jdbcType=VARCHAR},
      REIMWAY = #{record.reimway,jdbcType=VARCHAR},
      ALNID = #{record.alnid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.net.sinodata.model.LoanRepayment" >
    update loan_repayment
    <set >
      <if test="projectid != null" >
        PROJECTID = #{projectid,jdbcType=VARCHAR},
      </if>
      <if test="coopbank != null" >
        COOPBANK = #{coopbank,jdbcType=VARCHAR},
      </if>
      <if test="loanamount != null" >
        LOANAMOUNT = #{loanamount,jdbcType=VARCHAR},
      </if>
      <if test="bankaccount != null" >
        BANKACCOUNT = #{bankaccount,jdbcType=VARCHAR},
      </if>
      <if test="bankname != null" >
        BANKNAME = #{bankname,jdbcType=VARCHAR},
      </if>
      <if test="loanlimit != null" >
        LOANLIMIT = #{loanlimit,jdbcType=VARCHAR},
      </if>
      <if test="loandate != null" >
        LOANDATE = #{loandate,jdbcType=VARCHAR},
      </if>
      <if test="loanrate != null" >
        LOANRATE = #{loanrate,jdbcType=VARCHAR},
      </if>
      <if test="loancondition != null" >
        LOANCONDITION = #{loancondition,jdbcType=VARCHAR},
      </if>
      <if test="reimway != null" >
        REIMWAY = #{reimway,jdbcType=VARCHAR},
      </if>
      <if test="alnid != null" >
        ALNID = #{alnid,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.net.sinodata.model.LoanRepayment" >
    update loan_repayment
    set PROJECTID = #{projectid,jdbcType=VARCHAR},
      COOPBANK = #{coopbank,jdbcType=VARCHAR},
      LOANAMOUNT = #{loanamount,jdbcType=VARCHAR},
      BANKACCOUNT = #{bankaccount,jdbcType=VARCHAR},
      BANKNAME = #{bankname,jdbcType=VARCHAR},
      LOANLIMIT = #{loanlimit,jdbcType=VARCHAR},
      LOANDATE = #{loandate,jdbcType=VARCHAR},
      LOANRATE = #{loanrate,jdbcType=VARCHAR},
      LOANCONDITION = #{loancondition,jdbcType=VARCHAR},
      REIMWAY = #{reimway,jdbcType=VARCHAR},
      ALNID = #{alnid,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>