<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.net.sinodata.mapper.GuaranteeRepaymentMapper" >
  <resultMap id="BaseResultMap" type="cn.net.sinodata.model.GuaranteeRepayment" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="PROJECTID" property="projectid" jdbcType="VARCHAR" />
    <result column="CURSTAGE" property="curstage" jdbcType="VARCHAR" />
    <result column="CURAMOUNT" property="curamount" jdbcType="VARCHAR" />
    <result column="CURPLANDT" property="curplandt" jdbcType="VARCHAR" />
    <result column="CURREPAYDT" property="currepaydt" jdbcType="VARCHAR" />
    <result column="CURSTATUS" property="curstatus" jdbcType="VARCHAR" />
    <result column="GRRID" property="grrid" jdbcType="VARCHAR" />
    <result column="REMAINPRINCIPAL" property="remainprincipal" jdbcType="VARCHAR" />
    <result column="REPAYPRINCIPAL" property="repayprincipal" jdbcType="VARCHAR" />
    <result column="REPAYINTEREST" property="repayinterest" jdbcType="VARCHAR" />
    <result column="ACTUALAMOUNT" property="actualamount" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, PROJECTID, CURSTAGE, CURAMOUNT, CURPLANDT, CURREPAYDT, CURSTATUS, GRRID, REMAINPRINCIPAL, 
    REPAYPRINCIPAL, REPAYINTEREST, ACTUALAMOUNT
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.net.sinodata.model.GuaranteeRepaymentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from GUARANTEE_REPAYMENT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from GUARANTEE_REPAYMENT
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from GUARANTEE_REPAYMENT
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.net.sinodata.model.GuaranteeRepaymentExample" >
    delete from GUARANTEE_REPAYMENT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.net.sinodata.model.GuaranteeRepayment" >
    insert into GUARANTEE_REPAYMENT (ID, PROJECTID, CURSTAGE, 
      CURAMOUNT, CURPLANDT, CURREPAYDT, 
      CURSTATUS, GRRID, REMAINPRINCIPAL, 
      REPAYPRINCIPAL, REPAYINTEREST, ACTUALAMOUNT
      )
    values (#{id,jdbcType=VARCHAR}, #{projectid,jdbcType=VARCHAR}, #{curstage,jdbcType=VARCHAR}, 
      #{curamount,jdbcType=VARCHAR}, #{curplandt,jdbcType=VARCHAR}, #{currepaydt,jdbcType=VARCHAR}, 
      #{curstatus,jdbcType=VARCHAR}, #{grrid,jdbcType=VARCHAR}, #{remainprincipal,jdbcType=VARCHAR}, 
      #{repayprincipal,jdbcType=VARCHAR}, #{repayinterest,jdbcType=VARCHAR}, #{actualamount,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.net.sinodata.model.GuaranteeRepayment" >
    insert into GUARANTEE_REPAYMENT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="projectid != null" >
        PROJECTID,
      </if>
      <if test="curstage != null" >
        CURSTAGE,
      </if>
      <if test="curamount != null" >
        CURAMOUNT,
      </if>
      <if test="curplandt != null" >
        CURPLANDT,
      </if>
      <if test="currepaydt != null" >
        CURREPAYDT,
      </if>
      <if test="curstatus != null" >
        CURSTATUS,
      </if>
      <if test="grrid != null" >
        GRRID,
      </if>
      <if test="remainprincipal != null" >
        REMAINPRINCIPAL,
      </if>
      <if test="repayprincipal != null" >
        REPAYPRINCIPAL,
      </if>
      <if test="repayinterest != null" >
        REPAYINTEREST,
      </if>
      <if test="actualamount != null" >
        ACTUALAMOUNT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="projectid != null" >
        #{projectid,jdbcType=VARCHAR},
      </if>
      <if test="curstage != null" >
        #{curstage,jdbcType=VARCHAR},
      </if>
      <if test="curamount != null" >
        #{curamount,jdbcType=VARCHAR},
      </if>
      <if test="curplandt != null" >
        #{curplandt,jdbcType=VARCHAR},
      </if>
      <if test="currepaydt != null" >
        #{currepaydt,jdbcType=VARCHAR},
      </if>
      <if test="curstatus != null" >
        #{curstatus,jdbcType=VARCHAR},
      </if>
      <if test="grrid != null" >
        #{grrid,jdbcType=VARCHAR},
      </if>
      <if test="remainprincipal != null" >
        #{remainprincipal,jdbcType=VARCHAR},
      </if>
      <if test="repayprincipal != null" >
        #{repayprincipal,jdbcType=VARCHAR},
      </if>
      <if test="repayinterest != null" >
        #{repayinterest,jdbcType=VARCHAR},
      </if>
      <if test="actualamount != null" >
        #{actualamount,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.net.sinodata.model.GuaranteeRepaymentExample" resultType="java.lang.Integer" >
    select count(*) from GUARANTEE_REPAYMENT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update GUARANTEE_REPAYMENT
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.projectid != null" >
        PROJECTID = #{record.projectid,jdbcType=VARCHAR},
      </if>
      <if test="record.curstage != null" >
        CURSTAGE = #{record.curstage,jdbcType=VARCHAR},
      </if>
      <if test="record.curamount != null" >
        CURAMOUNT = #{record.curamount,jdbcType=VARCHAR},
      </if>
      <if test="record.curplandt != null" >
        CURPLANDT = #{record.curplandt,jdbcType=VARCHAR},
      </if>
      <if test="record.currepaydt != null" >
        CURREPAYDT = #{record.currepaydt,jdbcType=VARCHAR},
      </if>
      <if test="record.curstatus != null" >
        CURSTATUS = #{record.curstatus,jdbcType=VARCHAR},
      </if>
      <if test="record.grrid != null" >
        GRRID = #{record.grrid,jdbcType=VARCHAR},
      </if>
      <if test="record.remainprincipal != null" >
        REMAINPRINCIPAL = #{record.remainprincipal,jdbcType=VARCHAR},
      </if>
      <if test="record.repayprincipal != null" >
        REPAYPRINCIPAL = #{record.repayprincipal,jdbcType=VARCHAR},
      </if>
      <if test="record.repayinterest != null" >
        REPAYINTEREST = #{record.repayinterest,jdbcType=VARCHAR},
      </if>
      <if test="record.actualamount != null" >
        ACTUALAMOUNT = #{record.actualamount,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update GUARANTEE_REPAYMENT
    set ID = #{record.id,jdbcType=VARCHAR},
      PROJECTID = #{record.projectid,jdbcType=VARCHAR},
      CURSTAGE = #{record.curstage,jdbcType=VARCHAR},
      CURAMOUNT = #{record.curamount,jdbcType=VARCHAR},
      CURPLANDT = #{record.curplandt,jdbcType=VARCHAR},
      CURREPAYDT = #{record.currepaydt,jdbcType=VARCHAR},
      CURSTATUS = #{record.curstatus,jdbcType=VARCHAR},
      GRRID = #{record.grrid,jdbcType=VARCHAR},
      REMAINPRINCIPAL = #{record.remainprincipal,jdbcType=VARCHAR},
      REPAYPRINCIPAL = #{record.repayprincipal,jdbcType=VARCHAR},
      REPAYINTEREST = #{record.repayinterest,jdbcType=VARCHAR},
      ACTUALAMOUNT = #{record.actualamount,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.net.sinodata.model.GuaranteeRepayment" >
    update GUARANTEE_REPAYMENT
    <set >
      <if test="projectid != null" >
        PROJECTID = #{projectid,jdbcType=VARCHAR},
      </if>
      <if test="curstage != null" >
        CURSTAGE = #{curstage,jdbcType=VARCHAR},
      </if>
      <if test="curamount != null" >
        CURAMOUNT = #{curamount,jdbcType=VARCHAR},
      </if>
      <if test="curplandt != null" >
        CURPLANDT = #{curplandt,jdbcType=VARCHAR},
      </if>
      <if test="currepaydt != null" >
        CURREPAYDT = #{currepaydt,jdbcType=VARCHAR},
      </if>
      <if test="curstatus != null" >
        CURSTATUS = #{curstatus,jdbcType=VARCHAR},
      </if>
      <if test="grrid != null" >
        GRRID = #{grrid,jdbcType=VARCHAR},
      </if>
      <if test="remainprincipal != null" >
        REMAINPRINCIPAL = #{remainprincipal,jdbcType=VARCHAR},
      </if>
      <if test="repayprincipal != null" >
        REPAYPRINCIPAL = #{repayprincipal,jdbcType=VARCHAR},
      </if>
      <if test="repayinterest != null" >
        REPAYINTEREST = #{repayinterest,jdbcType=VARCHAR},
      </if>
      <if test="actualamount != null" >
        ACTUALAMOUNT = #{actualamount,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.net.sinodata.model.GuaranteeRepayment" >
    update GUARANTEE_REPAYMENT
    set PROJECTID = #{projectid,jdbcType=VARCHAR},
      CURSTAGE = #{curstage,jdbcType=VARCHAR},
      CURAMOUNT = #{curamount,jdbcType=VARCHAR},
      CURPLANDT = #{curplandt,jdbcType=VARCHAR},
      CURREPAYDT = #{currepaydt,jdbcType=VARCHAR},
      CURSTATUS = #{curstatus,jdbcType=VARCHAR},
      GRRID = #{grrid,jdbcType=VARCHAR},
      REMAINPRINCIPAL = #{remainprincipal,jdbcType=VARCHAR},
      REPAYPRINCIPAL = #{repayprincipal,jdbcType=VARCHAR},
      REPAYINTEREST = #{repayinterest,jdbcType=VARCHAR},
      ACTUALAMOUNT = #{actualamount,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>